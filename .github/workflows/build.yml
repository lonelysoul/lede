name: Build LEDE

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libncurses-dev libpython3-dev libreadline-dev libssl-dev libtool llvm lrzsz genisoimage msmtp ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev

    - name: Find largest directory
      id: find_largest_directory
      run: |
        largest_dir=$(df -h --output=avail,target | awk 'NR>1 {print $1 " " $2}' | sort -hr | head -n 1 | cut -d' ' -f2)
        echo "Found largest directory: $largest_dir"
        echo "::set-output name=largest_dir::$largest_dir"

    - name: Clone LEDE
      run: |
        mkdir -p ${{ steps.find_largest_directory.outputs.largest_dir }}/lede
        git clone https://github.com/coolsnowwolf/lede ${{ steps.find_largest_directory.outputs.largest_dir }}/lede
        cp .config ${{ steps.find_largest_directory.outputs.largest_dir }}/lede/.config
        cd ${{ steps.find_largest_directory.outputs.largest_dir }}/lede
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Build firmware
      run: |
        cd ${{ steps.find_largest_directory.outputs.largest_dir }}/lede
        make defconfig
        make -j$(nproc)

    - name: Upload firmware to release
      uses: ncipollo/release-action@v1
      with:
        artifacts: ${{ steps.find_largest_directory.outputs.largest_dir }}/lede/bin/targets/**/*
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
        name: LEDE Firmware
        body: This is an automated build of the LEDE firmware.
